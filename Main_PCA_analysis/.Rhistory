ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Ssf_95.overlap_prop <- vector()
for(i in 1:length(Ssf_95.overlap$overlap)){
Ssf_95.overlap_prop[i]  <- Ssf_95.overlap$overlap[i]/min(Ssf_95.overlap[i,1:2])
}
hist(Ssf_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Ssf = ggplot(data.frame(Overlap =  Ssf_95.overlap_prop),
aes(Overlap)) +
ggtitle("Sessile  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Ssf + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - demersal
Ab_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_benthic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Ab_95.overlap_prop <- vector()
for(i in 1:length(Ab_95.overlap$overlap)){
Ab_95.overlap_prop[i]  <- Ab_95.overlap$overlap[i]/min(Ab_95.overlap[i,1:2])
}
hist(Ab_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Ab = ggplot(data.frame(Overlap =  Ab_95.overlap_prop),
aes(Overlap)) +
ggtitle("Arboreal  - demersal Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Ab + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - volant
Av_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_volant,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Av_95.overlap_prop <- vector()
for(i in 1:length(Av_95.overlap$overlap)){
Av_95.overlap_prop[i]  <- Av_95.overlap$overlap[i]/min(Av_95.overlap[i,1:2])
}
hist(Av_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Av = ggplot(data.frame(Overlap =  Av_95.overlap_prop),
aes(Overlap)) +
ggtitle("Arboreal  - volant Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Av + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - semiaquatic
Asemi_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_semiaquatic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Asemi_95.overlap_prop <- vector()
for(i in 1:length(Av_95.overlap$overlap)){
Asemi_95.overlap_prop[i]  <- Asemi_95.overlap$overlap[i]/min(Asemi_95.overlap[i,1:2])
}
hist(Asemi_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Asemi = ggplot(data.frame(Overlap =  Asemi_95.overlap_prop),
aes(Overlap)) +
ggtitle("Arboreal  - semiaquatic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Asemi + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - terrestrial
At_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_terrestrial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
At_95.overlap_prop <- vector()
for(i in 1:length(At_95.overlap$overlap)){
At_95.overlap_prop[i]  <- At_95.overlap$overlap[i]/min(At_95.overlap[i,1:2])
}
hist(At_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_At = ggplot(data.frame(Overlap =  At_95.overlap_prop),
aes(Overlap)) +
geom_histogram(binwidth=0.1) +
ggtitle("Arboreal  - terrestrial Overlap") +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_At + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - pelagic
Ap_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_pelagic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Ap_95.overlap_prop <- vector()
for(i in 1:length(Ap_95.overlap$overlap)){
Ap_95.overlap_prop[i]  <- Ap_95.overlap$overlap[i]/min(Ap_95.overlap[i,1:2])
}
hist(Ap_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Ap = ggplot(data.frame(Overlap =  Ap_95.overlap_prop),
aes(Overlap)) +
ggtitle("Arboreal  - pelagic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Ap + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####arboreal  - semifossorial
Afoss_95.overlap <- bayesianOverlap(ellipse_arboreal,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Afoss_95.overlap_prop <- vector()
for(i in 1:length(Afoss_95.overlap$overlap)){
Afoss_95.overlap_prop[i]  <- Afoss_95.overlap$overlap[i]/min(Afoss_95.overlap[i,1:2])
}
hist(Afoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Afoss = ggplot(data.frame(Overlap =  Afoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("Arboreal  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Afoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####benthic  - volant
Bv_95.overlap <- bayesianOverlap(ellipse_benthic,
ellipse_volant,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Bv_95.overlap_prop <- vector()
for(i in 1:length(Bv_95.overlap$overlap)){
Bv_95.overlap_prop[i]  <- Bv_95.overlap$overlap[i]/min(Bv_95.overlap[i,1:2])
}
hist(Bv_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Bv = ggplot(data.frame(Overlap =  Bv_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - volant Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Bv + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####benthic  - semiaquatic
Bsemia_95.overlap <- bayesianOverlap(ellipse_benthic,
ellipse_semiaquatic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Bsemia_95.overlap_prop <- vector()
for(i in 1:length(Bsemia_95.overlap$overlap)){
Bsemia_95.overlap_prop[i]  <- Bsemia_95.overlap$overlap[i]/min(Bsemia_95.overlap[i,1:2])
}
hist(Bsemia_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Bsemia = ggplot(data.frame(Overlap =  Bsemia_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - semiaquatic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Bsemia + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####benthic  - terrestrial
Bt_95.overlap <- bayesianOverlap(ellipse_benthic,
ellipse_terrestrial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Bt_95.overlap_prop <- vector()
for(i in 1:length(Bt_95.overlap$overlap)){
Bt_95.overlap_prop[i]  <- Bt_95.overlap$overlap[i]/min(Bt_95.overlap[i,1:2])
}
hist(Bt_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Bt = ggplot(data.frame(Overlap =  Bt_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - terrestrial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Bt + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####benthic  - pelagic
Bp_95.overlap <- bayesianOverlap(ellipse_benthic,
ellipse_pelagic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Bp_95.overlap_prop <- vector()
for(i in 1:length(Bp_95.overlap$overlap)){
Bp_95.overlap_prop[i]  <- Bp_95.overlap$overlap[i]/min(Bp_95.overlap[i,1:2])
}
hist(Bp_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Bp = ggplot(data.frame(Overlap =  Bp_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - pelagic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Bp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####benthic  - semifossorial
Bfoss_95.overlap <- bayesianOverlap(ellipse_benthic,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Bfoss_95.overlap_prop <- vector()
for(i in 1:length(Bfoss_95.overlap$overlap)){
Bfoss_95.overlap_prop[i]  <- Bfoss_95.overlap$overlap[i]/min(Bfoss_95.overlap[i,1:2])
}
hist(Bfoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Bfoss = ggplot(data.frame(Overlap =  Bfoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Bfoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####volant  - semiaquatic
Vsem_95.overlap <- bayesianOverlap(ellipse_volant,
ellipse_semiaquatic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Vsem_95.overlap_prop <- vector()
for(i in 1:length(Vsem_95.overlap$overlap)){
Vsem_95.overlap_prop[i]  <- Vsem_95.overlap$overlap[i]/min(Vsem_95.overlap[i,1:2])
}
hist(Vsem_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Vsem = ggplot(data.frame(Overlap =  Vsem_95.overlap_prop),
aes(Overlap)) +
ggtitle("Volant  - semiaquatic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Vsem + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####volant  - terrestrial
Vt_95.overlap <- bayesianOverlap(ellipse_volant,
ellipse_terrestrial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Vt_95.overlap_prop <- vector()
for(i in 1:length(Vt_95.overlap$overlap)){
Vt_95.overlap_prop[i]  <- Vt_95.overlap$overlap[i]/min(Vt_95.overlap[i,1:2])
}
hist(Vt_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Vt = ggplot(data.frame(Overlap =  Vt_95.overlap_prop),
aes(Overlap)) +
ggtitle("volant  - terrestrial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Vt + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####volant  - pelagic
Vp_95.overlap <- bayesianOverlap(ellipse_volant,
ellipse_pelagic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Vp_95.overlap_prop <- vector()
for(i in 1:length(Vp_95.overlap$overlap)){
Vp_95.overlap_prop[i]  <- Vp_95.overlap$overlap[i]/min(Vp_95.overlap[i,1:2])
}
hist(Vp_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Vp = ggplot(data.frame(Overlap =  Vp_95.overlap_prop),
aes(Overlap)) +
ggtitle("Volant  - pelagic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Vp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####volant  - semifossorial
Vsfoss_95.overlap <- bayesianOverlap(ellipse_volant,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Vsfoss_95.overlap_prop <- vector()
for(i in 1:length(Vsfoss_95.overlap$overlap)){
Vsfoss_95.overlap_prop[i]  <- Vsfoss_95.overlap$overlap[i]/min(Vsfoss_95.overlap[i,1:2])
}
hist(Vsfoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Vsfoss = ggplot(data.frame(Overlap = Vsfoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("Demersal  - semiaquatic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Vsfoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####semiaquatic  - terrestrial
SAt_95.overlap <- bayesianOverlap(ellipse_semiaquatic,
ellipse_terrestrial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
SAt_95.overlap_prop <- vector()
for(i in 1:length(SAt_95.overlap$overlap)){
SAt_95.overlap_prop[i]  <- SAt_95.overlap$overlap[i]/min(SAt_95.overlap[i,1:2])
}
hist(SAt_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_SAt = ggplot(data.frame(Overlap = SAt_95.overlap_prop),
aes(Overlap)) +
ggtitle("Semiaquatic  - terrestrial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_SAt + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####semiaquatic  - pelagic
SAp_95.overlap <- bayesianOverlap(ellipse_semiaquatic,
ellipse_pelagic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
SAp_95.overlap_prop <- vector()
for(i in 1:length(SAp_95.overlap$overlap)){
SAp_95.overlap_prop[i]  <- SAp_95.overlap$overlap[i]/min(SAp_95.overlap[i,1:2])
}
hist(SAp_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_SAp = ggplot(data.frame(Overlap = SAp_95.overlap_prop),
aes(Overlap)) +
ggtitle("Semiaquatic  - pelagic Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_SAp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####semiaquatic  - semifossorial
SAsfoss_95.overlap <- bayesianOverlap(ellipse_semiaquatic,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
SAsfoss_95.overlap_prop <- vector()
for(i in 1:length(SAsfoss_95.overlap$overlap)){
SAsfoss_95.overlap_prop[i]  <- SAsfoss_95.overlap$overlap[i]/min(SAsfoss_95.overlap[i,1:2])
}
hist(SAsfoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_SAsfoss = ggplot(data.frame(Overlap = SAsfoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("Semiaquatic  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_SAsfoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####terrestrial  - pelagic
Tp_95.overlap <- bayesianOverlap(ellipse_terrestrial,
ellipse_pelagic,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Tp_95.overlap_prop <- vector()
for(i in 1:length(Tp_95.overlap$overlap)){
Tp_95.overlap_prop[i]  <- Tp_95.overlap$overlap[i]/min(Tp_95.overlap[i,1:2])
}
hist(Tp_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Tp = ggplot(data.frame(Overlap = Tp_95.overlap_prop),
aes(Overlap)) +
geom_histogram(binwidth=0.1) +
ggtitle("terrestrial  - pelagic Overlap") +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####terrestrial  - semifossorial
Tfoss_95.overlap <- bayesianOverlap(ellipse_terrestrial,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Tfoss_95.overlap_prop <- vector()
for(i in 1:length(Tfoss_95.overlap$overlap)){
Tfoss_95.overlap_prop[i]  <- Tfoss_95.overlap$overlap[i]/min(Tfoss_95.overlap[i,1:2])
}
hist(Tfoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Tfoss = ggplot(data.frame(Overlap = Tfoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("terrestrial  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Tfoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
#####pelagic  - semifossorial
Psfoss_95.overlap <- bayesianOverlap(ellipse_pelagic,
ellipse_semifossorial,
ellipses.posterior_mob,
draws = 100,
p.interval = 0.95,
n = 100)
Psfoss_95.overlap_prop <- vector()
for(i in 1:length(Psfoss_95.overlap$overlap)){
Psfoss_95.overlap_prop[i]  <- Psfoss_95.overlap$overlap[i]/min(Psfoss_95.overlap[i,1:2])
}
hist(Psfoss_95.overlap_prop, xlab = "Proportion of overlap", main = "")
myplot_Psfoss = ggplot(data.frame(Overlap = Psfoss_95.overlap_prop),
aes(Overlap)) +
ggtitle("terrestrial  - semifossorial Overlap") +
geom_histogram(binwidth=0.1) +
scale_x_continuous(limits = c(-0.05, 1.05))
myplot_Psfoss + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=20))
group.MLmob <- groupMetricsML(siber.mob)
group.MLtaxa <- groupMetricsML(siber.plots)
group.MLmob <- groupMetricsML(siber.mob)
# options for running jags
parms <- list()
parms$n.iter <- 2 * 10^4   # number of iterations to run the model for
parms$n.burnin <- 1 * 10^3 # discard the first set of values
parms$n.thin <- 10     # thin the posterior by this many
parms$n.chains <- 2        # run this many chains
# define the priors
priors <- list()
priors$R <- 1 * diag(2)
priors$k <- 2
priors$tau.mu <- 1.0E-3
ellipses.posterior <- siberMVN(siber.plots, parms, priors)
pop_data
names(pop_data)
prior<-list(R = list(V = 1/2, nu=0.002),
G = list(G1=list(V = 1/2,n = 1, alpha.mu=rep(0,1), alpha.V= diag(1)*10^3),
G1=list(V = 1/2,n = 1, alpha.mu=rep(0,1), alpha.V= diag(1)*10^3)))
juv_data <- data.frame(surv_sd = as.vector(pop_data$surv_sd),
prop_la = as.vector(pop_data$prop_la),
animal = pop_data$animal,
species = pop_data$species)
j_surv <- MCMCglmm(prop_la ~ surv_sd,
data = juv_data,
random=~animal + species,
pedigree = axis_trees[[1]],
prior = prior,
nitt = c(11000), burnin = 1000, thin = 5, verbose = F)
summary(j_surv)
